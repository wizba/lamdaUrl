service: serverless-nodejs-app
provider:
  name: aws
  runtime: nodejs14.x
  stage: dev
  region: us-east-1

  environment:
    DYNAMO_TABLE_NAME: "tableTest2"
    CANDIDATE_EMAIL_TABLE: "candidate-email-${opt:stage, self:provider.stage}"
    HOST_NAME: "https://aoelk836l7.execute-api.us-east-1.amazonaws.com/dev"
  iamRoleStatements:
      - Effect: "Allow"
        Action:
          - "dynamodb:Query"
          - "dynamodb:Scan"
          - "dynamodb:GetItem"
          - "dynamodb:PutItem"
        Resource: "*"

plugins:
  - serverless-offline
  
functions:
  app:
    handler: app.server # reference the file and exported method
    events: # events trigger lambda functions
      - http: # this is an API Gateway HTTP event trigger
          path: /
          method: ANY
          cors: true
      - http: # all routes get proxied to the Express router
          path: /{proxy+}
          method: ANY
          cors: true
resources:
  Resources:
    CandidatesDynamoDbTable:
        # DeletionPolicy: Retain
        Type: 'AWS::DynamoDB::Table'
        Properties:
          AttributeDefinitions:
            -
              AttributeName: "id"
              AttributeType: "S"   
          KeySchema:
            -
              AttributeName: "id"
              KeyType: "HASH"
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
          StreamSpecification:
            StreamViewType: "NEW_AND_OLD_IMAGES"
          TableName: ${self:provider.environment.DYNAMO_TABLE_NAME}
